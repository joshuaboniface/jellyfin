name: Stable Backport Check
on:
  issue_comment:
  pull_request_target:
    types:
      - labeled

jobs:
  check-backport:
    name: Check Backport
    if: ${{ ( github.event.issue.pull_request != '' && contains(github.event.comment.body, '@jellyfin-bot check backport') ) || github.event.label.name == 'stable backport' }}
    runs-on: ubuntu-latest
    steps:
      - name: Notify as seen
        uses: peter-evans/create-or-update-comment@v1.4.5
        if: ${{ github.event.comment != null }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ github.event.comment.id }}
          reactions: eyes

      - name: Checkout the latest code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.JF_BOT_TOKEN }}
          fetch-depth: 0

      - name: Notify as running
        id: comment_running
        uses: peter-evans/create-or-update-comment@v1.4.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: 115
          body: |
            Running backport tests...

      - name: Perform test backport
        id: run_tests
        run: |
          git config --global user.name "Jellyfin Bot"
          git config --global user.email "team@jellyfin.org"
          CURRENT_BRANCH=$( git symbolic-ref --short HEAD )
          git checkout master
          git merge --no-ff ${CURRENT_BRANCH}
          MERGE_COMMIT_HASH=$( git log -q -1 | head -1 | awk '{ print $2 }' )
          git fetch --all
          CURRENT_STABLE=$( git branch -r | grep 'origin/release' | sort -rV | head -1 | awk -F '/' '{ print $NF }' )
          stable_branch="Current stable branch: ${CURRENT_STABLE}"
          echo ${stable_branch}
          echo ::set-output name=branch::${stable_branch}
          git checkout -t origin/${CURRENT_STABLE} -b ${CURRENT_STABLE}
          git cherry-pick -sx -m1 ${MERGE_COMMIT_HASH} &>output.txt
          echo $?
          cat output.txt
          output="$( cat output.txt )"
          echo ${output}
          echo ::set-output name=output::$output

      - name: Notify with result success
        uses: peter-evans/create-or-update-comment@v1.4.5
        if: ${{ success() }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.comment_running.outputs.comment-id }}
          body: |
            ${{ steps.run_tests.outputs.branch }}
            ${{ steps.run_tests.outputs.output }}
          reactions: hooray

      - name: Notify with result failure
        uses: peter-evans/create-or-update-comment@v1.4.5
        if: ${{ failure() }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.comment_running.outputs.comment-id }}
          body: |
            ${{ steps.run_tests.outputs.branch }}
            ${{ steps.run_tests.outputs.output }}
          reactions: confused
